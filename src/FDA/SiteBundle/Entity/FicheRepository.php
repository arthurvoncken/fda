<?php

namespace FDA\SiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FicheRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FicheRepository extends EntityRepository
{
	public function getFicheSorted()
	{
		return $this->getEntityManager()
            ->createQuery('SELECT f FROM FDASiteBundle:fiche f ORDER BY f.titre DESC')
            ->getResult();
	}
	
	public function get3RandFiches()
	{
		$liste_fiches = $this->findBy(array('published' => true), array('titre' => 'ASC'));
		$nbreFiches = count($liste_fiches);
		$myFiches = array();
		$mySelec = array();
		$i = 0;
		while (($i < 3) && ($i < $nbreFiches ))
		{
			$myFiche = rand(0, ($nbreFiches - 1));
			$temp = false;
			$j = 0;
			$nbreSelec = count($mySelec);
			while (($j < $nbreSelec) && ($temp == false))
			{
				$temp = ($myFiche == $mySelec[$j]);
				++$j;
			}
			if ($temp == false)
			{
				$mySelec[] = $myFiche;
				$myFiches[] = $liste_fiches[$myFiche];
				++$i;
			}
		}
		return $myFiches;
	}
	
	public function findByCateg($listCateg, $search)
	{
		$qb = $this->createQueryBuilder('a')
			->leftJoin('a.categories', 'c')
			->addSelect('c');
		$flag = true;
		$i = 0;
		foreach ($listCateg as $categ)
		{
			if ($flag)
			{
				$qb->where('c.name = :categ'.$i)->setParameter('categ'.$i, $categ->getName());
				$flag = false;
			}
			else
			{
				$qb->orwhere('c.name = :categ'.$i)->setParameter('categ'.$i, $categ->getName());
			}
		++$i;
		}
		if ($search != null)
		{
			$array_search = explode(' ', $search);
			$i = 0;
			foreach ($array_search as $search_word)
			{
				if ($flag)
				{
					$qb->where('a.titre like :search'.$i)->setParameter('search'.$i, '%'.$search_word.'%');
					$flag = false;
				}
				else
				{
					$qb->orwhere('a.titre like :search'.$i)->setParameter('search'.$i, '%'.$search_word.'%');
				}
			++$i;
			}
		}
		$qb->andwhere('a.published = true');
		$qb->orderBy('a.titre', 'ASC');
		return $qb->getQuery()->getResult();
	}

}
